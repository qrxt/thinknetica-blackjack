Card - класс игральной карты
публичное поле suit: масть карты (строка, обязательное)
публичное поле name: название карты (строка, обязательное)
приватное поле value: базовая ценность карты для подсчета результатов (число, необязательное, по умолчанию 0)
публичный метод label: возвращает объединение названия карты и масти
публичный метод value: возвращает ценность карты в зависимости от ее имени, отдельная логика для Ace

---

Deck - класс колоды игральных карт
использует Card
при инициализации генерирует содержимое колоды через generate_deck
публичное поле cards: объекты Card (массив, обязательное)
публичный метод shuffle: замешивает карты в случайном порядке
публичный метод draw: возвращает карту, сбрасывает карту через discard
приватный метод discard: позволяет сбросить карту
привтаный метод generate_deck: генерирует 52 игральные карты Card

---

Hand - класс руки игрока, для управления картами игрока, подсчета ценности
публичное поле cards: объекты Card (массив, обязательное)
публичный метод draw: вызывает метод draw колоды, возвращенную карту добавляет в cards (метод draw колоды сбрасывает возвращенную карту из колоды)
публичный метод value: возвращает суммарную ценность карт в руке игрока

---

Player - класс игрока
использует Hand
публичное поле name: имя игрока (строка, обязательное)
публичное поле hand: рука игрока (Hand, по умолчанию пустая)
публичное поле revealing: признак намерения игрока раскрыть карты (булево, по умолчанию false)
публичное поле balance: баланс игрока (число, по умолчанию 100)
публичный метод bet: вычитает из баланса игрока и возвращает ставку (число, необязательное, по умолчанию 10)
публичный метод score: подсчитывает очки игрока по ценности карт в руке

Dealer - потомок Player, класс Дилера
при инициализации задает заготовленное имя

---

Turn - класс хода, определяет набор возможных ходов и общую логику их выполнения
приватное поле player: игрок (Player, обязательное)
приватное поле deck: колода (Deck, обязательное)
публичный метод execute_turn: принимает опцию хода, вызывает выполнение общей логики хода
защищенный метод execute_draw: игрок берет карту из колоды
защищенный метод execute_skip: объявляется, что игрок пропускает ход
защищенный метод execute_reveal: признак revealing игрока устанавливается в истину, объявляется, что игрок хочет раскрыть карты

PlayerTurn - потомок Turn, ход игрока
публичный метод run: запрашивает ввод опции хода у игрока, выполняет ход с указанной опцией
приватный метод prompt_for_option: запрашивает ввод опции хода у игрока
приватный метод turn_options: определяет набор опций в зависимости от кол-ва карт у игрока
защищенный метод execute_draw: вызывает метод execute_draw базового класса, объявляет игроку какая карта была взята

ComputerTurn - потомок Turn, ход "компьютера"
публичный метод run: объявляет о ходе дилера, определяет подходящую опцию хода, вызывает выполнение хода
приватный метод choose_option: определяет подходящую опцию для хода в зависимости от количества очков
приватный метод execute_draw: вызывает метод execute_draw базового класса, объявляет игроку об обновленном количестве карт дилера

---

Game - класс игровой логики, определяет действия перед и до партии, перед и до каждого хода
при инициализации (принимает имя) задает дилера, игрока (по переданному имени), колоду, банк, текущего игрока, объект хода, флаг об окончании партии
публичный метод run: выполняет подготовку и вызов игрового цикла
приватный метод prepare: заставляет игроков сделать ставки, наполняет и замешивает колоду, задает объект хода, раздает игрокам карты, объявляет игроку карты в руке
приватный метод prepare_starting_hand: раздает карты игрокам
приватный метод game_loop: выполняет беспрерывный запуск начала и окончания ходов, терминальное значение - флаг об окончании партии
привтаный метод finish: выполняет определение победителя партии, вывод об окончании, запрос информации о необходимости начала новой партии
приватный метод determine_winner: определяет победителя партии на основе очков игроков
приватный метод prompt_for_continue: запрашивает, требуется ли начать новую партию
приватный метод finish_turn: изменяет флаг finished, если кто-то из игроков раскрыл карты / у игроков набралось по 3 карты. Подготоавливает новый ход
приватный метод prepare_next_turn: определяет игрока и объект хода для следующего хода

---
